/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.buddat.wumods.snowman;

import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.gotti.wurmunlimited.modloader.classhooks.HookManager;
import org.gotti.wurmunlimited.modloader.interfaces.Configurable;
import org.gotti.wurmunlimited.modloader.interfaces.PreInitable;
import org.gotti.wurmunlimited.modloader.interfaces.WurmServerMod;

import javassist.CannotCompileException;
import javassist.ClassPool;
import javassist.CtClass;
import javassist.CtMethod;
import javassist.NotFoundException;

public class SnowmanTweak implements WurmServerMod, PreInitable, Configurable
{

	private static Logger logger = Logger.getLogger(SnowmanTweak.class.getName());
	
	private int spawnCount = 1;
	private float staticQuality = 0f;

	public static void logException(final String message, final Throwable t)
	{
		logger.log(Level.SEVERE, message, t);
	}
	
	@Override
	public void preInit()
	{
		try
		{
			ClassPool classes = HookManager.getInstance().getClassPool();
			CtClass ctItem = classes.getCtClass("com.wurmonline.server.items.Item");
			CtMethod snowmanMethod = ctItem.getMethod("addSnowmanItem", "()V");
			snowmanMethod.setBody("{" +
					"float ql = " + staticQuality + ";" +
					"for (int i = 0; i < " + spawnCount + "; i++) try {" + 
						"com.wurmonline.server.items.Item toPlace = com.wurmonline.server.items.ItemFactory.createItem(com.wurmonline.server.items.ItemList.snowball, ql > 0 ? ql : com.wurmonline.server.Server.rand.nextFloat() * 50f + 50f, (byte) 0, null);" + 
						"toPlace.setPos(0f, 0f, 0.8f + (i * 0.05f), com.wurmonline.server.Server.rand.nextFloat() * 360f, onBridge());" + 
						"if (insertItem(toPlace, false, false, true)) {" + 
							"com.wurmonline.server.zones.VolaTile vt = com.wurmonline.server.zones.Zones.getTileOrNull(getTileX(), getTileY(), isOnSurface());" + 
							"com.wurmonline.server.zones.VirtualZone[] watchers = vt.getWatchers();" +
							"for (int j = 0; j < watchers.length; j++) watchers[j].getWatcher().getCommunicator().sendItem(toPlace, (long) -10, false);" + 
						"} else { com.wurmonline.server.Items.destroyItem(toPlace.getWurmId());} " + 
					"} catch (java.lang.Exception e) { } }");
		} 
		catch (NotFoundException e)
		{
			logException("Class not found", e);
		} 
		catch (CannotCompileException e)
		{
			logException("Cannot compile method change", e);
		}
	}

	@Override
	public void configure(Properties props)
	{
		spawnCount = Integer.parseInt(props.getProperty("spawnCount", "1"));
		staticQuality = Float.parseFloat(props.getProperty("staticQuality", "0"));
	}

}
